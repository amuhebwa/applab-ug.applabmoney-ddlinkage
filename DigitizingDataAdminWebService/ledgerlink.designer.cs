#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitizingDataAdminWebService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ledgerlink")]
	public partial class ledgerlinkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertAudit_Log(Audit_Log instance);
    partial void UpdateAudit_Log(Audit_Log instance);
    partial void DeleteAudit_Log(Audit_Log instance);
    partial void InsertCbt_info(Cbt_info instance);
    partial void UpdateCbt_info(Cbt_info instance);
    partial void DeleteCbt_info(Cbt_info instance);
    partial void InsertDataSubmission(DataSubmission instance);
    partial void UpdateDataSubmission(DataSubmission instance);
    partial void DeleteDataSubmission(DataSubmission instance);
    partial void InsertFine(Fine instance);
    partial void UpdateFine(Fine instance);
    partial void DeleteFine(Fine instance);
    partial void InsertLoanIssue(LoanIssue instance);
    partial void UpdateLoanIssue(LoanIssue instance);
    partial void DeleteLoanIssue(LoanIssue instance);
    partial void InsertLoanRepayment(LoanRepayment instance);
    partial void UpdateLoanRepayment(LoanRepayment instance);
    partial void DeleteLoanRepayment(LoanRepayment instance);
    partial void InsertMeeting(Meeting instance);
    partial void UpdateMeeting(Meeting instance);
    partial void DeleteMeeting(Meeting instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertSaving(Saving instance);
    partial void UpdateSaving(Saving instance);
    partial void DeleteSaving(Saving instance);
    partial void InsertStatusType(StatusType instance);
    partial void UpdateStatusType(StatusType instance);
    partial void DeleteStatusType(StatusType instance);
    partial void InsertUserPermission(UserPermission instance);
    partial void UpdateUserPermission(UserPermission instance);
    partial void DeleteUserPermission(UserPermission instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVsla(Vsla instance);
    partial void UpdateVsla(Vsla instance);
    partial void DeleteVsla(Vsla instance);
    partial void InsertVslaCycle(VslaCycle instance);
    partial void UpdateVslaCycle(VslaCycle instance);
    partial void DeleteVslaCycle(VslaCycle instance);
    partial void InsertVslaDdActivation(VslaDdActivation instance);
    partial void UpdateVslaDdActivation(VslaDdActivation instance);
    partial void DeleteVslaDdActivation(VslaDdActivation instance);
    partial void InsertVslaRegion(VslaRegion instance);
    partial void UpdateVslaRegion(VslaRegion instance);
    partial void DeleteVslaRegion(VslaRegion instance);
    #endregion
		
		public ledgerlinkDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ledgerlinkConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ledgerlinkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ledgerlinkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ledgerlinkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ledgerlinkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attendance> Attendances
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<Audit_Log> Audit_Logs
		{
			get
			{
				return this.GetTable<Audit_Log>();
			}
		}
		
		public System.Data.Linq.Table<Cbt_info> Cbt_infos
		{
			get
			{
				return this.GetTable<Cbt_info>();
			}
		}
		
		public System.Data.Linq.Table<DataSubmission> DataSubmissions
		{
			get
			{
				return this.GetTable<DataSubmission>();
			}
		}
		
		public System.Data.Linq.Table<DataSubmission_20140113> DataSubmission_20140113s
		{
			get
			{
				return this.GetTable<DataSubmission_20140113>();
			}
		}
		
		public System.Data.Linq.Table<DataSubmission_20140113_2> DataSubmission_20140113_2s
		{
			get
			{
				return this.GetTable<DataSubmission_20140113_2>();
			}
		}
		
		public System.Data.Linq.Table<Fine> Fines
		{
			get
			{
				return this.GetTable<Fine>();
			}
		}
		
		public System.Data.Linq.Table<LoanIssue> LoanIssues
		{
			get
			{
				return this.GetTable<LoanIssue>();
			}
		}
		
		public System.Data.Linq.Table<LoanRepayment> LoanRepayments
		{
			get
			{
				return this.GetTable<LoanRepayment>();
			}
		}
		
		public System.Data.Linq.Table<Meeting> Meetings
		{
			get
			{
				return this.GetTable<Meeting>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Saving> Savings
		{
			get
			{
				return this.GetTable<Saving>();
			}
		}
		
		public System.Data.Linq.Table<StatusType> StatusTypes
		{
			get
			{
				return this.GetTable<StatusType>();
			}
		}
		
		public System.Data.Linq.Table<UserPermission> UserPermissions
		{
			get
			{
				return this.GetTable<UserPermission>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vsla> Vslas
		{
			get
			{
				return this.GetTable<Vsla>();
			}
		}
		
		public System.Data.Linq.Table<VslaCycle> VslaCycles
		{
			get
			{
				return this.GetTable<VslaCycle>();
			}
		}
		
		public System.Data.Linq.Table<VslaDdActivation> VslaDdActivations
		{
			get
			{
				return this.GetTable<VslaDdActivation>();
			}
		}
		
		public System.Data.Linq.Table<VslaRegion> VslaRegions
		{
			get
			{
				return this.GetTable<VslaRegion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttendanceId;
		
		private System.Nullable<int> _AttendanceIdEx;
		
		private string _Comments;
		
		private System.Nullable<bool> _IsPresent;
		
		private System.Nullable<int> _MeetingId;
		
		private System.Nullable<int> _MemberId;
		
		private EntityRef<Meeting> _Meeting;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendanceIdChanging(int value);
    partial void OnAttendanceIdChanged();
    partial void OnAttendanceIdExChanging(System.Nullable<int> value);
    partial void OnAttendanceIdExChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsPresentChanging(System.Nullable<bool> value);
    partial void OnIsPresentChanged();
    partial void OnMeetingIdChanging(System.Nullable<int> value);
    partial void OnMeetingIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    #endregion
		
		public Attendance()
		{
			this._Meeting = default(EntityRef<Meeting>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendanceId
		{
			get
			{
				return this._AttendanceId;
			}
			set
			{
				if ((this._AttendanceId != value))
				{
					this.OnAttendanceIdChanging(value);
					this.SendPropertyChanging();
					this._AttendanceId = value;
					this.SendPropertyChanged("AttendanceId");
					this.OnAttendanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceIdEx", DbType="Int")]
		public System.Nullable<int> AttendanceIdEx
		{
			get
			{
				return this._AttendanceIdEx;
			}
			set
			{
				if ((this._AttendanceIdEx != value))
				{
					this.OnAttendanceIdExChanging(value);
					this.SendPropertyChanging();
					this._AttendanceIdEx = value;
					this.SendPropertyChanged("AttendanceIdEx");
					this.OnAttendanceIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(50)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPresent", DbType="Bit")]
		public System.Nullable<bool> IsPresent
		{
			get
			{
				return this._IsPresent;
			}
			set
			{
				if ((this._IsPresent != value))
				{
					this.OnIsPresentChanging(value);
					this.SendPropertyChanging();
					this._IsPresent = value;
					this.SendPropertyChanged("IsPresent");
					this.OnIsPresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="Int")]
		public System.Nullable<int> MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Attendance", Storage="_Meeting", ThisKey="MeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._MeetingId = value.MeetingId;
					}
					else
					{
						this._MeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Attendance", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Audit_Log")]
	public partial class Audit_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private int _UserId;
		
		private System.DateTime _LogDate;
		
		private string _ActionPerformed;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    partial void OnActionPerformedChanging(string value);
    partial void OnActionPerformedChanged();
    #endregion
		
		public Audit_Log()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPerformed", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActionPerformed
		{
			get
			{
				return this._ActionPerformed;
			}
			set
			{
				if ((this._ActionPerformed != value))
				{
					this.OnActionPerformedChanging(value);
					this.SendPropertyChanging();
					this._ActionPerformed = value;
					this.SendPropertyChanged("ActionPerformed");
					this.OnActionPerformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Audit_Log", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Audit_Logs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Audit_Logs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cbt_info")]
	public partial class Cbt_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Region;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private int _Status;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<Vsla> _Vslas;
		
		private EntityRef<VslaRegion> _VslaRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegionChanging(int value);
    partial void OnRegionChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public Cbt_info()
		{
			this._Vslas = new EntitySet<Vsla>(new Action<Vsla>(this.attach_Vslas), new Action<Vsla>(this.detach_Vslas));
			this._VslaRegion = default(EntityRef<VslaRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="Int NOT NULL")]
		public int Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					if (this._VslaRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(250)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(250)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cbt_info_Vsla", Storage="_Vslas", ThisKey="Id", OtherKey="CBT")]
		public EntitySet<Vsla> Vslas
		{
			get
			{
				return this._Vslas;
			}
			set
			{
				this._Vslas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VslaRegion_Cbt_info", Storage="_VslaRegion", ThisKey="Region", OtherKey="RegionId", IsForeignKey=true)]
		public VslaRegion VslaRegion
		{
			get
			{
				return this._VslaRegion.Entity;
			}
			set
			{
				VslaRegion previousValue = this._VslaRegion.Entity;
				if (((previousValue != value) 
							|| (this._VslaRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VslaRegion.Entity = null;
						previousValue.Cbt_infos.Remove(this);
					}
					this._VslaRegion.Entity = value;
					if ((value != null))
					{
						value.Cbt_infos.Add(this);
						this._Region = value.RegionId;
					}
					else
					{
						this._Region = default(int);
					}
					this.SendPropertyChanged("VslaRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vslas(Vsla entity)
		{
			this.SendPropertyChanging();
			entity.Cbt_info = this;
		}
		
		private void detach_Vslas(Vsla entity)
		{
			this.SendPropertyChanging();
			entity.Cbt_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSubmission")]
	public partial class DataSubmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubmissionId;
		
		private string _SourceVslaCode;
		
		private string _SourcePhoneImei;
		
		private string _SourceNetworkOperator;
		
		private string _SourceNetworkType;
		
		private System.Nullable<System.DateTime> _SubmissionTimestamp;
		
		private string _Data;
		
		private System.Nullable<bool> _ProcessedFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubmissionIdChanging(int value);
    partial void OnSubmissionIdChanged();
    partial void OnSourceVslaCodeChanging(string value);
    partial void OnSourceVslaCodeChanged();
    partial void OnSourcePhoneImeiChanging(string value);
    partial void OnSourcePhoneImeiChanged();
    partial void OnSourceNetworkOperatorChanging(string value);
    partial void OnSourceNetworkOperatorChanged();
    partial void OnSourceNetworkTypeChanging(string value);
    partial void OnSourceNetworkTypeChanged();
    partial void OnSubmissionTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmissionTimestampChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnProcessedFlagChanging(System.Nullable<bool> value);
    partial void OnProcessedFlagChanged();
    #endregion
		
		public DataSubmission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubmissionId
		{
			get
			{
				return this._SubmissionId;
			}
			set
			{
				if ((this._SubmissionId != value))
				{
					this.OnSubmissionIdChanging(value);
					this.SendPropertyChanging();
					this._SubmissionId = value;
					this.SendPropertyChanged("SubmissionId");
					this.OnSubmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceVslaCode", DbType="NVarChar(20)")]
		public string SourceVslaCode
		{
			get
			{
				return this._SourceVslaCode;
			}
			set
			{
				if ((this._SourceVslaCode != value))
				{
					this.OnSourceVslaCodeChanging(value);
					this.SendPropertyChanging();
					this._SourceVslaCode = value;
					this.SendPropertyChanged("SourceVslaCode");
					this.OnSourceVslaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePhoneImei", DbType="NVarChar(20)")]
		public string SourcePhoneImei
		{
			get
			{
				return this._SourcePhoneImei;
			}
			set
			{
				if ((this._SourcePhoneImei != value))
				{
					this.OnSourcePhoneImeiChanging(value);
					this.SendPropertyChanging();
					this._SourcePhoneImei = value;
					this.SendPropertyChanged("SourcePhoneImei");
					this.OnSourcePhoneImeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkOperator", DbType="NVarChar(50)")]
		public string SourceNetworkOperator
		{
			get
			{
				return this._SourceNetworkOperator;
			}
			set
			{
				if ((this._SourceNetworkOperator != value))
				{
					this.OnSourceNetworkOperatorChanging(value);
					this.SendPropertyChanging();
					this._SourceNetworkOperator = value;
					this.SendPropertyChanged("SourceNetworkOperator");
					this.OnSourceNetworkOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkType", DbType="NVarChar(20)")]
		public string SourceNetworkType
		{
			get
			{
				return this._SourceNetworkType;
			}
			set
			{
				if ((this._SourceNetworkType != value))
				{
					this.OnSourceNetworkTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceNetworkType = value;
					this.SendPropertyChanged("SourceNetworkType");
					this.OnSourceNetworkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmissionTimestamp
		{
			get
			{
				return this._SubmissionTimestamp;
			}
			set
			{
				if ((this._SubmissionTimestamp != value))
				{
					this.OnSubmissionTimestampChanging(value);
					this.SendPropertyChanging();
					this._SubmissionTimestamp = value;
					this.SendPropertyChanged("SubmissionTimestamp");
					this.OnSubmissionTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedFlag", DbType="Bit")]
		public System.Nullable<bool> ProcessedFlag
		{
			get
			{
				return this._ProcessedFlag;
			}
			set
			{
				if ((this._ProcessedFlag != value))
				{
					this.OnProcessedFlagChanging(value);
					this.SendPropertyChanging();
					this._ProcessedFlag = value;
					this.SendPropertyChanged("ProcessedFlag");
					this.OnProcessedFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSubmission_20140113")]
	public partial class DataSubmission_20140113
	{
		
		private int _SubmissionId;
		
		private string _SourceVslaCode;
		
		private string _SourcePhoneImei;
		
		private string _SourceNetworkOperator;
		
		private string _SourceNetworkType;
		
		private System.Nullable<System.DateTime> _SubmissionTimestamp;
		
		private string _Data;
		
		private System.Nullable<bool> _ProcessedFlag;
		
		public DataSubmission_20140113()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SubmissionId
		{
			get
			{
				return this._SubmissionId;
			}
			set
			{
				if ((this._SubmissionId != value))
				{
					this._SubmissionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceVslaCode", DbType="NVarChar(20)")]
		public string SourceVslaCode
		{
			get
			{
				return this._SourceVslaCode;
			}
			set
			{
				if ((this._SourceVslaCode != value))
				{
					this._SourceVslaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePhoneImei", DbType="NVarChar(20)")]
		public string SourcePhoneImei
		{
			get
			{
				return this._SourcePhoneImei;
			}
			set
			{
				if ((this._SourcePhoneImei != value))
				{
					this._SourcePhoneImei = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkOperator", DbType="NVarChar(50)")]
		public string SourceNetworkOperator
		{
			get
			{
				return this._SourceNetworkOperator;
			}
			set
			{
				if ((this._SourceNetworkOperator != value))
				{
					this._SourceNetworkOperator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkType", DbType="NVarChar(20)")]
		public string SourceNetworkType
		{
			get
			{
				return this._SourceNetworkType;
			}
			set
			{
				if ((this._SourceNetworkType != value))
				{
					this._SourceNetworkType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmissionTimestamp
		{
			get
			{
				return this._SubmissionTimestamp;
			}
			set
			{
				if ((this._SubmissionTimestamp != value))
				{
					this._SubmissionTimestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedFlag", DbType="Bit")]
		public System.Nullable<bool> ProcessedFlag
		{
			get
			{
				return this._ProcessedFlag;
			}
			set
			{
				if ((this._ProcessedFlag != value))
				{
					this._ProcessedFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSubmission_20140113_2")]
	public partial class DataSubmission_20140113_2
	{
		
		private int _SubmissionId;
		
		private string _SourceVslaCode;
		
		private string _SourcePhoneImei;
		
		private string _SourceNetworkOperator;
		
		private string _SourceNetworkType;
		
		private System.Nullable<System.DateTime> _SubmissionTimestamp;
		
		private string _Data;
		
		private System.Nullable<bool> _ProcessedFlag;
		
		public DataSubmission_20140113_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SubmissionId
		{
			get
			{
				return this._SubmissionId;
			}
			set
			{
				if ((this._SubmissionId != value))
				{
					this._SubmissionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceVslaCode", DbType="NVarChar(20)")]
		public string SourceVslaCode
		{
			get
			{
				return this._SourceVslaCode;
			}
			set
			{
				if ((this._SourceVslaCode != value))
				{
					this._SourceVslaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePhoneImei", DbType="NVarChar(20)")]
		public string SourcePhoneImei
		{
			get
			{
				return this._SourcePhoneImei;
			}
			set
			{
				if ((this._SourcePhoneImei != value))
				{
					this._SourcePhoneImei = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkOperator", DbType="NVarChar(50)")]
		public string SourceNetworkOperator
		{
			get
			{
				return this._SourceNetworkOperator;
			}
			set
			{
				if ((this._SourceNetworkOperator != value))
				{
					this._SourceNetworkOperator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceNetworkType", DbType="NVarChar(20)")]
		public string SourceNetworkType
		{
			get
			{
				return this._SourceNetworkType;
			}
			set
			{
				if ((this._SourceNetworkType != value))
				{
					this._SourceNetworkType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmissionTimestamp
		{
			get
			{
				return this._SubmissionTimestamp;
			}
			set
			{
				if ((this._SubmissionTimestamp != value))
				{
					this._SubmissionTimestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedFlag", DbType="Bit")]
		public System.Nullable<bool> ProcessedFlag
		{
			get
			{
				return this._ProcessedFlag;
			}
			set
			{
				if ((this._ProcessedFlag != value))
				{
					this._ProcessedFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fine")]
	public partial class Fine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FineId;
		
		private System.Nullable<int> _FineIdEx;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _ExpectedDate;
		
		private System.Nullable<bool> _IsCleared;
		
		private System.Nullable<System.DateTime> _DateCleared;
		
		private System.Nullable<int> _IssuedInMeetingId;
		
		private System.Nullable<int> _PaidInMeetingId;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<int> _MeetingId;
		
		private EntityRef<Meeting> _Meeting;
		
		private EntityRef<Meeting> _Meeting1;
		
		private EntityRef<Meeting> _Meeting2;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFineIdChanging(int value);
    partial void OnFineIdChanged();
    partial void OnFineIdExChanging(System.Nullable<int> value);
    partial void OnFineIdExChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnExpectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedDateChanged();
    partial void OnIsClearedChanging(System.Nullable<bool> value);
    partial void OnIsClearedChanged();
    partial void OnDateClearedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClearedChanged();
    partial void OnIssuedInMeetingIdChanging(System.Nullable<int> value);
    partial void OnIssuedInMeetingIdChanged();
    partial void OnPaidInMeetingIdChanging(System.Nullable<int> value);
    partial void OnPaidInMeetingIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnMeetingIdChanging(System.Nullable<int> value);
    partial void OnMeetingIdChanged();
    #endregion
		
		public Fine()
		{
			this._Meeting = default(EntityRef<Meeting>);
			this._Meeting1 = default(EntityRef<Meeting>);
			this._Meeting2 = default(EntityRef<Meeting>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FineId
		{
			get
			{
				return this._FineId;
			}
			set
			{
				if ((this._FineId != value))
				{
					this.OnFineIdChanging(value);
					this.SendPropertyChanging();
					this._FineId = value;
					this.SendPropertyChanged("FineId");
					this.OnFineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineIdEx", DbType="Int")]
		public System.Nullable<int> FineIdEx
		{
			get
			{
				return this._FineIdEx;
			}
			set
			{
				if ((this._FineIdEx != value))
				{
					this.OnFineIdExChanging(value);
					this.SendPropertyChanging();
					this._FineIdEx = value;
					this.SendPropertyChanged("FineIdEx");
					this.OnFineIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedDate
		{
			get
			{
				return this._ExpectedDate;
			}
			set
			{
				if ((this._ExpectedDate != value))
				{
					this.OnExpectedDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedDate = value;
					this.SendPropertyChanged("ExpectedDate");
					this.OnExpectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit")]
		public System.Nullable<bool> IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleared", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCleared
		{
			get
			{
				return this._DateCleared;
			}
			set
			{
				if ((this._DateCleared != value))
				{
					this.OnDateClearedChanging(value);
					this.SendPropertyChanging();
					this._DateCleared = value;
					this.SendPropertyChanged("DateCleared");
					this.OnDateClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedInMeetingId", DbType="Int")]
		public System.Nullable<int> IssuedInMeetingId
		{
			get
			{
				return this._IssuedInMeetingId;
			}
			set
			{
				if ((this._IssuedInMeetingId != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIssuedInMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._IssuedInMeetingId = value;
					this.SendPropertyChanged("IssuedInMeetingId");
					this.OnIssuedInMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidInMeetingId", DbType="Int")]
		public System.Nullable<int> PaidInMeetingId
		{
			get
			{
				return this._PaidInMeetingId;
			}
			set
			{
				if ((this._PaidInMeetingId != value))
				{
					if (this._Meeting1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaidInMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._PaidInMeetingId = value;
					this.SendPropertyChanged("PaidInMeetingId");
					this.OnPaidInMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="Int")]
		public System.Nullable<int> MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					if (this._Meeting2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine", Storage="_Meeting", ThisKey="IssuedInMeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.Fines.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.Fines.Add(this);
						this._IssuedInMeetingId = value.MeetingId;
					}
					else
					{
						this._IssuedInMeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine1", Storage="_Meeting1", ThisKey="PaidInMeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting1
		{
			get
			{
				return this._Meeting1.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting1.Entity;
				if (((previousValue != value) 
							|| (this._Meeting1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting1.Entity = null;
						previousValue.Fines1.Remove(this);
					}
					this._Meeting1.Entity = value;
					if ((value != null))
					{
						value.Fines1.Add(this);
						this._PaidInMeetingId = value.MeetingId;
					}
					else
					{
						this._PaidInMeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine2", Storage="_Meeting2", ThisKey="MeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting2
		{
			get
			{
				return this._Meeting2.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting2.Entity;
				if (((previousValue != value) 
							|| (this._Meeting2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting2.Entity = null;
						previousValue.Fines2.Remove(this);
					}
					this._Meeting2.Entity = value;
					if ((value != null))
					{
						value.Fines2.Add(this);
						this._MeetingId = value.MeetingId;
					}
					else
					{
						this._MeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Fine", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Fines.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Fines.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanIssue")]
	public partial class LoanIssue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanId;
		
		private System.Nullable<int> _LoanIdEx;
		
		private System.Nullable<int> _LoanNo;
		
		private System.Nullable<decimal> _PrincipalAmount;
		
		private System.Nullable<decimal> _InterestAmount;
		
		private System.Nullable<decimal> _Balance;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _DateCleared;
		
		private System.Nullable<System.DateTime> _DateDue;
		
		private System.Nullable<bool> _IsCleared;
		
		private System.Nullable<bool> _IsDefaulted;
		
		private System.Nullable<decimal> _TotalRepaid;
		
		private System.Nullable<bool> _IsWrittenOff;
		
		private System.Nullable<int> _MeetingId;
		
		private System.Nullable<int> _MemberId;
		
		private EntitySet<LoanRepayment> _LoanRepayments;
		
		private EntityRef<Meeting> _Meeting;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnLoanIdExChanging(System.Nullable<int> value);
    partial void OnLoanIdExChanged();
    partial void OnLoanNoChanging(System.Nullable<int> value);
    partial void OnLoanNoChanged();
    partial void OnPrincipalAmountChanging(System.Nullable<decimal> value);
    partial void OnPrincipalAmountChanged();
    partial void OnInterestAmountChanging(System.Nullable<decimal> value);
    partial void OnInterestAmountChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDateClearedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClearedChanged();
    partial void OnDateDueChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDueChanged();
    partial void OnIsClearedChanging(System.Nullable<bool> value);
    partial void OnIsClearedChanged();
    partial void OnIsDefaultedChanging(System.Nullable<bool> value);
    partial void OnIsDefaultedChanged();
    partial void OnTotalRepaidChanging(System.Nullable<decimal> value);
    partial void OnTotalRepaidChanged();
    partial void OnIsWrittenOffChanging(System.Nullable<bool> value);
    partial void OnIsWrittenOffChanged();
    partial void OnMeetingIdChanging(System.Nullable<int> value);
    partial void OnMeetingIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    #endregion
		
		public LoanIssue()
		{
			this._LoanRepayments = new EntitySet<LoanRepayment>(new Action<LoanRepayment>(this.attach_LoanRepayments), new Action<LoanRepayment>(this.detach_LoanRepayments));
			this._Meeting = default(EntityRef<Meeting>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanIdEx", DbType="Int")]
		public System.Nullable<int> LoanIdEx
		{
			get
			{
				return this._LoanIdEx;
			}
			set
			{
				if ((this._LoanIdEx != value))
				{
					this.OnLoanIdExChanging(value);
					this.SendPropertyChanging();
					this._LoanIdEx = value;
					this.SendPropertyChanged("LoanIdEx");
					this.OnLoanIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNo", DbType="Int")]
		public System.Nullable<int> LoanNo
		{
			get
			{
				return this._LoanNo;
			}
			set
			{
				if ((this._LoanNo != value))
				{
					this.OnLoanNoChanging(value);
					this.SendPropertyChanging();
					this._LoanNo = value;
					this.SendPropertyChanged("LoanNo");
					this.OnLoanNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PrincipalAmount
		{
			get
			{
				return this._PrincipalAmount;
			}
			set
			{
				if ((this._PrincipalAmount != value))
				{
					this.OnPrincipalAmountChanging(value);
					this.SendPropertyChanging();
					this._PrincipalAmount = value;
					this.SendPropertyChanged("PrincipalAmount");
					this.OnPrincipalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(50)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleared", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCleared
		{
			get
			{
				return this._DateCleared;
			}
			set
			{
				if ((this._DateCleared != value))
				{
					this.OnDateClearedChanging(value);
					this.SendPropertyChanging();
					this._DateCleared = value;
					this.SendPropertyChanged("DateCleared");
					this.OnDateClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDue", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDue
		{
			get
			{
				return this._DateDue;
			}
			set
			{
				if ((this._DateDue != value))
				{
					this.OnDateDueChanging(value);
					this.SendPropertyChanging();
					this._DateDue = value;
					this.SendPropertyChanged("DateDue");
					this.OnDateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit")]
		public System.Nullable<bool> IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefaulted", DbType="Bit")]
		public System.Nullable<bool> IsDefaulted
		{
			get
			{
				return this._IsDefaulted;
			}
			set
			{
				if ((this._IsDefaulted != value))
				{
					this.OnIsDefaultedChanging(value);
					this.SendPropertyChanging();
					this._IsDefaulted = value;
					this.SendPropertyChanged("IsDefaulted");
					this.OnIsDefaultedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRepaid", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalRepaid
		{
			get
			{
				return this._TotalRepaid;
			}
			set
			{
				if ((this._TotalRepaid != value))
				{
					this.OnTotalRepaidChanging(value);
					this.SendPropertyChanging();
					this._TotalRepaid = value;
					this.SendPropertyChanged("TotalRepaid");
					this.OnTotalRepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWrittenOff", DbType="Bit")]
		public System.Nullable<bool> IsWrittenOff
		{
			get
			{
				return this._IsWrittenOff;
			}
			set
			{
				if ((this._IsWrittenOff != value))
				{
					this.OnIsWrittenOffChanging(value);
					this.SendPropertyChanging();
					this._IsWrittenOff = value;
					this.SendPropertyChanged("IsWrittenOff");
					this.OnIsWrittenOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="Int")]
		public System.Nullable<int> MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanIssue_LoanRepayment", Storage="_LoanRepayments", ThisKey="LoanId", OtherKey="LoanId")]
		public EntitySet<LoanRepayment> LoanRepayments
		{
			get
			{
				return this._LoanRepayments;
			}
			set
			{
				this._LoanRepayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_LoanIssue", Storage="_Meeting", ThisKey="MeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.LoanIssues.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.LoanIssues.Add(this);
						this._MeetingId = value.MeetingId;
					}
					else
					{
						this._MeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_LoanIssue", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.LoanIssues.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.LoanIssues.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.LoanIssue = this;
		}
		
		private void detach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.LoanIssue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanRepayment")]
	public partial class LoanRepayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentId;
		
		private System.Nullable<int> _RepaymentIdEx;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _BalanceAfter;
		
		private System.Nullable<decimal> _BalanceBefore;
		
		private string _Comments;
		
		private System.Nullable<System.DateTime> _LastDateDue;
		
		private System.Nullable<System.DateTime> _NextDateDue;
		
		private System.Nullable<decimal> _InterestAmount;
		
		private System.Nullable<decimal> _RolloverAmount;
		
		private System.Nullable<int> _MeetingId;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<int> _LoanId;
		
		private EntityRef<LoanIssue> _LoanIssue;
		
		private EntityRef<Meeting> _Meeting;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentIdChanging(int value);
    partial void OnRepaymentIdChanged();
    partial void OnRepaymentIdExChanging(System.Nullable<int> value);
    partial void OnRepaymentIdExChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnBalanceAfterChanging(System.Nullable<decimal> value);
    partial void OnBalanceAfterChanged();
    partial void OnBalanceBeforeChanging(System.Nullable<decimal> value);
    partial void OnBalanceBeforeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnLastDateDueChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDateDueChanged();
    partial void OnNextDateDueChanging(System.Nullable<System.DateTime> value);
    partial void OnNextDateDueChanged();
    partial void OnInterestAmountChanging(System.Nullable<decimal> value);
    partial void OnInterestAmountChanged();
    partial void OnRolloverAmountChanging(System.Nullable<decimal> value);
    partial void OnRolloverAmountChanged();
    partial void OnMeetingIdChanging(System.Nullable<int> value);
    partial void OnMeetingIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnLoanIdChanging(System.Nullable<int> value);
    partial void OnLoanIdChanged();
    #endregion
		
		public LoanRepayment()
		{
			this._LoanIssue = default(EntityRef<LoanIssue>);
			this._Meeting = default(EntityRef<Meeting>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentId
		{
			get
			{
				return this._RepaymentId;
			}
			set
			{
				if ((this._RepaymentId != value))
				{
					this.OnRepaymentIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentId = value;
					this.SendPropertyChanged("RepaymentId");
					this.OnRepaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentIdEx", DbType="Int")]
		public System.Nullable<int> RepaymentIdEx
		{
			get
			{
				return this._RepaymentIdEx;
			}
			set
			{
				if ((this._RepaymentIdEx != value))
				{
					this.OnRepaymentIdExChanging(value);
					this.SendPropertyChanging();
					this._RepaymentIdEx = value;
					this.SendPropertyChanged("RepaymentIdEx");
					this.OnRepaymentIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAfter", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BalanceAfter
		{
			get
			{
				return this._BalanceAfter;
			}
			set
			{
				if ((this._BalanceAfter != value))
				{
					this.OnBalanceAfterChanging(value);
					this.SendPropertyChanging();
					this._BalanceAfter = value;
					this.SendPropertyChanged("BalanceAfter");
					this.OnBalanceAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceBefore", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BalanceBefore
		{
			get
			{
				return this._BalanceBefore;
			}
			set
			{
				if ((this._BalanceBefore != value))
				{
					this.OnBalanceBeforeChanging(value);
					this.SendPropertyChanging();
					this._BalanceBefore = value;
					this.SendPropertyChanged("BalanceBefore");
					this.OnBalanceBeforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(50)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDateDue", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDateDue
		{
			get
			{
				return this._LastDateDue;
			}
			set
			{
				if ((this._LastDateDue != value))
				{
					this.OnLastDateDueChanging(value);
					this.SendPropertyChanging();
					this._LastDateDue = value;
					this.SendPropertyChanged("LastDateDue");
					this.OnLastDateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDateDue", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDateDue
		{
			get
			{
				return this._NextDateDue;
			}
			set
			{
				if ((this._NextDateDue != value))
				{
					this.OnNextDateDueChanging(value);
					this.SendPropertyChanging();
					this._NextDateDue = value;
					this.SendPropertyChanged("NextDateDue");
					this.OnNextDateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolloverAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RolloverAmount
		{
			get
			{
				return this._RolloverAmount;
			}
			set
			{
				if ((this._RolloverAmount != value))
				{
					this.OnRolloverAmountChanging(value);
					this.SendPropertyChanging();
					this._RolloverAmount = value;
					this.SendPropertyChanged("RolloverAmount");
					this.OnRolloverAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="Int")]
		public System.Nullable<int> MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._LoanIssue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanIssue_LoanRepayment", Storage="_LoanIssue", ThisKey="LoanId", OtherKey="LoanId", IsForeignKey=true)]
		public LoanIssue LoanIssue
		{
			get
			{
				return this._LoanIssue.Entity;
			}
			set
			{
				LoanIssue previousValue = this._LoanIssue.Entity;
				if (((previousValue != value) 
							|| (this._LoanIssue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanIssue.Entity = null;
						previousValue.LoanRepayments.Remove(this);
					}
					this._LoanIssue.Entity = value;
					if ((value != null))
					{
						value.LoanRepayments.Add(this);
						this._LoanId = value.LoanId;
					}
					else
					{
						this._LoanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoanIssue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_LoanRepayment", Storage="_Meeting", ThisKey="MeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.LoanRepayments.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.LoanRepayments.Add(this);
						this._MeetingId = value.MeetingId;
					}
					else
					{
						this._MeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_LoanRepayment", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.LoanRepayments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.LoanRepayments.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meeting")]
	public partial class Meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MeetingId;
		
		private System.Nullable<int> _MeetingIdEx;
		
		private System.Nullable<decimal> _CashExpenses;
		
		private System.Nullable<decimal> _CashFines;
		
		private System.Nullable<decimal> _CashFromBank;
		
		private System.Nullable<decimal> _CashFromBox;
		
		private System.Nullable<decimal> _CashSavedBank;
		
		private System.Nullable<decimal> _CashSavedBox;
		
		private System.Nullable<decimal> _CashWelfare;
		
		private System.Nullable<System.DateTime> _DateSent;
		
		private System.Nullable<bool> _IsCurrent;
		
		private System.Nullable<bool> _IsDataSent;
		
		private System.Nullable<System.DateTime> _MeetingDate;
		
		private System.Nullable<int> _CountOfMembersPresent;
		
		private System.Nullable<decimal> _SumOfSavings;
		
		private System.Nullable<decimal> _SumOfLoanIssues;
		
		private System.Nullable<decimal> _SumOfLoanRepayments;
		
		private System.Nullable<int> _CycleId;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<Fine> _Fines;
		
		private EntitySet<Fine> _Fines1;
		
		private EntitySet<Fine> _Fines2;
		
		private EntitySet<LoanIssue> _LoanIssues;
		
		private EntitySet<LoanRepayment> _LoanRepayments;
		
		private EntitySet<Saving> _Savings;
		
		private EntityRef<VslaCycle> _VslaCycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingIdChanging(int value);
    partial void OnMeetingIdChanged();
    partial void OnMeetingIdExChanging(System.Nullable<int> value);
    partial void OnMeetingIdExChanged();
    partial void OnCashExpensesChanging(System.Nullable<decimal> value);
    partial void OnCashExpensesChanged();
    partial void OnCashFinesChanging(System.Nullable<decimal> value);
    partial void OnCashFinesChanged();
    partial void OnCashFromBankChanging(System.Nullable<decimal> value);
    partial void OnCashFromBankChanged();
    partial void OnCashFromBoxChanging(System.Nullable<decimal> value);
    partial void OnCashFromBoxChanged();
    partial void OnCashSavedBankChanging(System.Nullable<decimal> value);
    partial void OnCashSavedBankChanged();
    partial void OnCashSavedBoxChanging(System.Nullable<decimal> value);
    partial void OnCashSavedBoxChanged();
    partial void OnCashWelfareChanging(System.Nullable<decimal> value);
    partial void OnCashWelfareChanged();
    partial void OnDateSentChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSentChanged();
    partial void OnIsCurrentChanging(System.Nullable<bool> value);
    partial void OnIsCurrentChanged();
    partial void OnIsDataSentChanging(System.Nullable<bool> value);
    partial void OnIsDataSentChanged();
    partial void OnMeetingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMeetingDateChanged();
    partial void OnCountOfMembersPresentChanging(System.Nullable<int> value);
    partial void OnCountOfMembersPresentChanged();
    partial void OnSumOfSavingsChanging(System.Nullable<decimal> value);
    partial void OnSumOfSavingsChanged();
    partial void OnSumOfLoanIssuesChanging(System.Nullable<decimal> value);
    partial void OnSumOfLoanIssuesChanged();
    partial void OnSumOfLoanRepaymentsChanging(System.Nullable<decimal> value);
    partial void OnSumOfLoanRepaymentsChanged();
    partial void OnCycleIdChanging(System.Nullable<int> value);
    partial void OnCycleIdChanged();
    #endregion
		
		public Meeting()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Fines = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines), new Action<Fine>(this.detach_Fines));
			this._Fines1 = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines1), new Action<Fine>(this.detach_Fines1));
			this._Fines2 = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines2), new Action<Fine>(this.detach_Fines2));
			this._LoanIssues = new EntitySet<LoanIssue>(new Action<LoanIssue>(this.attach_LoanIssues), new Action<LoanIssue>(this.detach_LoanIssues));
			this._LoanRepayments = new EntitySet<LoanRepayment>(new Action<LoanRepayment>(this.attach_LoanRepayments), new Action<LoanRepayment>(this.detach_LoanRepayments));
			this._Savings = new EntitySet<Saving>(new Action<Saving>(this.attach_Savings), new Action<Saving>(this.detach_Savings));
			this._VslaCycle = default(EntityRef<VslaCycle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingIdEx", DbType="Int")]
		public System.Nullable<int> MeetingIdEx
		{
			get
			{
				return this._MeetingIdEx;
			}
			set
			{
				if ((this._MeetingIdEx != value))
				{
					this.OnMeetingIdExChanging(value);
					this.SendPropertyChanging();
					this._MeetingIdEx = value;
					this.SendPropertyChanged("MeetingIdEx");
					this.OnMeetingIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashExpenses", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashExpenses
		{
			get
			{
				return this._CashExpenses;
			}
			set
			{
				if ((this._CashExpenses != value))
				{
					this.OnCashExpensesChanging(value);
					this.SendPropertyChanging();
					this._CashExpenses = value;
					this.SendPropertyChanged("CashExpenses");
					this.OnCashExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashFines", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashFines
		{
			get
			{
				return this._CashFines;
			}
			set
			{
				if ((this._CashFines != value))
				{
					this.OnCashFinesChanging(value);
					this.SendPropertyChanging();
					this._CashFines = value;
					this.SendPropertyChanged("CashFines");
					this.OnCashFinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashFromBank", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashFromBank
		{
			get
			{
				return this._CashFromBank;
			}
			set
			{
				if ((this._CashFromBank != value))
				{
					this.OnCashFromBankChanging(value);
					this.SendPropertyChanging();
					this._CashFromBank = value;
					this.SendPropertyChanged("CashFromBank");
					this.OnCashFromBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashFromBox", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashFromBox
		{
			get
			{
				return this._CashFromBox;
			}
			set
			{
				if ((this._CashFromBox != value))
				{
					this.OnCashFromBoxChanging(value);
					this.SendPropertyChanging();
					this._CashFromBox = value;
					this.SendPropertyChanged("CashFromBox");
					this.OnCashFromBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashSavedBank", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashSavedBank
		{
			get
			{
				return this._CashSavedBank;
			}
			set
			{
				if ((this._CashSavedBank != value))
				{
					this.OnCashSavedBankChanging(value);
					this.SendPropertyChanging();
					this._CashSavedBank = value;
					this.SendPropertyChanged("CashSavedBank");
					this.OnCashSavedBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashSavedBox", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashSavedBox
		{
			get
			{
				return this._CashSavedBox;
			}
			set
			{
				if ((this._CashSavedBox != value))
				{
					this.OnCashSavedBoxChanging(value);
					this.SendPropertyChanging();
					this._CashSavedBox = value;
					this.SendPropertyChanged("CashSavedBox");
					this.OnCashSavedBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashWelfare", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CashWelfare
		{
			get
			{
				return this._CashWelfare;
			}
			set
			{
				if ((this._CashWelfare != value))
				{
					this.OnCashWelfareChanging(value);
					this.SendPropertyChanging();
					this._CashWelfare = value;
					this.SendPropertyChanged("CashWelfare");
					this.OnCashWelfareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSent
		{
			get
			{
				return this._DateSent;
			}
			set
			{
				if ((this._DateSent != value))
				{
					this.OnDateSentChanging(value);
					this.SendPropertyChanging();
					this._DateSent = value;
					this.SendPropertyChanged("DateSent");
					this.OnDateSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit")]
		public System.Nullable<bool> IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataSent", DbType="Bit")]
		public System.Nullable<bool> IsDataSent
		{
			get
			{
				return this._IsDataSent;
			}
			set
			{
				if ((this._IsDataSent != value))
				{
					this.OnIsDataSentChanging(value);
					this.SendPropertyChanging();
					this._IsDataSent = value;
					this.SendPropertyChanged("IsDataSent");
					this.OnIsDataSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MeetingDate
		{
			get
			{
				return this._MeetingDate;
			}
			set
			{
				if ((this._MeetingDate != value))
				{
					this.OnMeetingDateChanging(value);
					this.SendPropertyChanging();
					this._MeetingDate = value;
					this.SendPropertyChanged("MeetingDate");
					this.OnMeetingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOfMembersPresent", DbType="Int")]
		public System.Nullable<int> CountOfMembersPresent
		{
			get
			{
				return this._CountOfMembersPresent;
			}
			set
			{
				if ((this._CountOfMembersPresent != value))
				{
					this.OnCountOfMembersPresentChanging(value);
					this.SendPropertyChanging();
					this._CountOfMembersPresent = value;
					this.SendPropertyChanged("CountOfMembersPresent");
					this.OnCountOfMembersPresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumOfSavings", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SumOfSavings
		{
			get
			{
				return this._SumOfSavings;
			}
			set
			{
				if ((this._SumOfSavings != value))
				{
					this.OnSumOfSavingsChanging(value);
					this.SendPropertyChanging();
					this._SumOfSavings = value;
					this.SendPropertyChanged("SumOfSavings");
					this.OnSumOfSavingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumOfLoanIssues", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SumOfLoanIssues
		{
			get
			{
				return this._SumOfLoanIssues;
			}
			set
			{
				if ((this._SumOfLoanIssues != value))
				{
					this.OnSumOfLoanIssuesChanging(value);
					this.SendPropertyChanging();
					this._SumOfLoanIssues = value;
					this.SendPropertyChanged("SumOfLoanIssues");
					this.OnSumOfLoanIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumOfLoanRepayments", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SumOfLoanRepayments
		{
			get
			{
				return this._SumOfLoanRepayments;
			}
			set
			{
				if ((this._SumOfLoanRepayments != value))
				{
					this.OnSumOfLoanRepaymentsChanging(value);
					this.SendPropertyChanging();
					this._SumOfLoanRepayments = value;
					this.SendPropertyChanged("SumOfLoanRepayments");
					this.OnSumOfLoanRepaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleId", DbType="Int")]
		public System.Nullable<int> CycleId
		{
			get
			{
				return this._CycleId;
			}
			set
			{
				if ((this._CycleId != value))
				{
					if (this._VslaCycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCycleIdChanging(value);
					this.SendPropertyChanging();
					this._CycleId = value;
					this.SendPropertyChanged("CycleId");
					this.OnCycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Attendance", Storage="_Attendances", ThisKey="MeetingId", OtherKey="MeetingId")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine", Storage="_Fines", ThisKey="MeetingId", OtherKey="IssuedInMeetingId")]
		public EntitySet<Fine> Fines
		{
			get
			{
				return this._Fines;
			}
			set
			{
				this._Fines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine1", Storage="_Fines1", ThisKey="MeetingId", OtherKey="PaidInMeetingId")]
		public EntitySet<Fine> Fines1
		{
			get
			{
				return this._Fines1;
			}
			set
			{
				this._Fines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Fine2", Storage="_Fines2", ThisKey="MeetingId", OtherKey="MeetingId")]
		public EntitySet<Fine> Fines2
		{
			get
			{
				return this._Fines2;
			}
			set
			{
				this._Fines2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_LoanIssue", Storage="_LoanIssues", ThisKey="MeetingId", OtherKey="MeetingId")]
		public EntitySet<LoanIssue> LoanIssues
		{
			get
			{
				return this._LoanIssues;
			}
			set
			{
				this._LoanIssues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_LoanRepayment", Storage="_LoanRepayments", ThisKey="MeetingId", OtherKey="MeetingId")]
		public EntitySet<LoanRepayment> LoanRepayments
		{
			get
			{
				return this._LoanRepayments;
			}
			set
			{
				this._LoanRepayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Saving", Storage="_Savings", ThisKey="MeetingId", OtherKey="MeetingId")]
		public EntitySet<Saving> Savings
		{
			get
			{
				return this._Savings;
			}
			set
			{
				this._Savings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VslaCycle_Meeting", Storage="_VslaCycle", ThisKey="CycleId", OtherKey="CycleId", IsForeignKey=true)]
		public VslaCycle VslaCycle
		{
			get
			{
				return this._VslaCycle.Entity;
			}
			set
			{
				VslaCycle previousValue = this._VslaCycle.Entity;
				if (((previousValue != value) 
							|| (this._VslaCycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VslaCycle.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._VslaCycle.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._CycleId = value.CycleId;
					}
					else
					{
						this._CycleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VslaCycle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
		
		private void attach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
		
		private void attach_Fines1(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting1 = this;
		}
		
		private void detach_Fines1(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting1 = null;
		}
		
		private void attach_Fines2(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting2 = this;
		}
		
		private void detach_Fines2(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Meeting2 = null;
		}
		
		private void attach_LoanIssues(LoanIssue entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_LoanIssues(LoanIssue entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
		
		private void attach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
		
		private void attach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = this;
		}
		
		private void detach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.Meeting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberId;
		
		private System.Nullable<int> _MemberIdEx;
		
		private System.Nullable<int> _MemberNo;
		
		private System.Nullable<int> _CyclesCompleted;
		
		private string _Surname;
		
		private string _OtherNames;
		
		private string _Gender;
		
		private string _Occupation;
		
		private System.Nullable<System.DateTime> _DateArchived;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsArchived;
		
		private string _PhoneNo;
		
		private System.Nullable<int> _VslaId;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<Fine> _Fines;
		
		private EntitySet<LoanIssue> _LoanIssues;
		
		private EntitySet<LoanRepayment> _LoanRepayments;
		
		private EntitySet<Saving> _Savings;
		
		private EntityRef<Vsla> _Vsla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIdChanging(int value);
    partial void OnMemberIdChanged();
    partial void OnMemberIdExChanging(System.Nullable<int> value);
    partial void OnMemberIdExChanged();
    partial void OnMemberNoChanging(System.Nullable<int> value);
    partial void OnMemberNoChanged();
    partial void OnCyclesCompletedChanging(System.Nullable<int> value);
    partial void OnCyclesCompletedChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnOtherNamesChanging(string value);
    partial void OnOtherNamesChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnDateArchivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateArchivedChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsArchivedChanging(System.Nullable<bool> value);
    partial void OnIsArchivedChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnVslaIdChanging(System.Nullable<int> value);
    partial void OnVslaIdChanged();
    #endregion
		
		public Member()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Fines = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines), new Action<Fine>(this.detach_Fines));
			this._LoanIssues = new EntitySet<LoanIssue>(new Action<LoanIssue>(this.attach_LoanIssues), new Action<LoanIssue>(this.detach_LoanIssues));
			this._LoanRepayments = new EntitySet<LoanRepayment>(new Action<LoanRepayment>(this.attach_LoanRepayments), new Action<LoanRepayment>(this.detach_LoanRepayments));
			this._Savings = new EntitySet<Saving>(new Action<Saving>(this.attach_Savings), new Action<Saving>(this.detach_Savings));
			this._Vsla = default(EntityRef<Vsla>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberIdEx", DbType="Int")]
		public System.Nullable<int> MemberIdEx
		{
			get
			{
				return this._MemberIdEx;
			}
			set
			{
				if ((this._MemberIdEx != value))
				{
					this.OnMemberIdExChanging(value);
					this.SendPropertyChanging();
					this._MemberIdEx = value;
					this.SendPropertyChanged("MemberIdEx");
					this.OnMemberIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberNo", DbType="Int")]
		public System.Nullable<int> MemberNo
		{
			get
			{
				return this._MemberNo;
			}
			set
			{
				if ((this._MemberNo != value))
				{
					this.OnMemberNoChanging(value);
					this.SendPropertyChanging();
					this._MemberNo = value;
					this.SendPropertyChanged("MemberNo");
					this.OnMemberNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CyclesCompleted", DbType="Int")]
		public System.Nullable<int> CyclesCompleted
		{
			get
			{
				return this._CyclesCompleted;
			}
			set
			{
				if ((this._CyclesCompleted != value))
				{
					this.OnCyclesCompletedChanging(value);
					this.SendPropertyChanging();
					this._CyclesCompleted = value;
					this.SendPropertyChanged("CyclesCompleted");
					this.OnCyclesCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherNames", DbType="NVarChar(50)")]
		public string OtherNames
		{
			get
			{
				return this._OtherNames;
			}
			set
			{
				if ((this._OtherNames != value))
				{
					this.OnOtherNamesChanging(value);
					this.SendPropertyChanging();
					this._OtherNames = value;
					this.SendPropertyChanged("OtherNames");
					this.OnOtherNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(50)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateArchived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateArchived
		{
			get
			{
				return this._DateArchived;
			}
			set
			{
				if ((this._DateArchived != value))
				{
					this.OnDateArchivedChanging(value);
					this.SendPropertyChanging();
					this._DateArchived = value;
					this.SendPropertyChanged("DateArchived");
					this.OnDateArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit")]
		public System.Nullable<bool> IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="NVarChar(20)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaId", DbType="Int")]
		public System.Nullable<int> VslaId
		{
			get
			{
				return this._VslaId;
			}
			set
			{
				if ((this._VslaId != value))
				{
					if (this._Vsla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVslaIdChanging(value);
					this.SendPropertyChanging();
					this._VslaId = value;
					this.SendPropertyChanged("VslaId");
					this.OnVslaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Attendance", Storage="_Attendances", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Fine", Storage="_Fines", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<Fine> Fines
		{
			get
			{
				return this._Fines;
			}
			set
			{
				this._Fines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_LoanIssue", Storage="_LoanIssues", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<LoanIssue> LoanIssues
		{
			get
			{
				return this._LoanIssues;
			}
			set
			{
				this._LoanIssues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_LoanRepayment", Storage="_LoanRepayments", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<LoanRepayment> LoanRepayments
		{
			get
			{
				return this._LoanRepayments;
			}
			set
			{
				this._LoanRepayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Saving", Storage="_Savings", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<Saving> Savings
		{
			get
			{
				return this._Savings;
			}
			set
			{
				this._Savings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_Member", Storage="_Vsla", ThisKey="VslaId", OtherKey="VslaId", IsForeignKey=true)]
		public Vsla Vsla
		{
			get
			{
				return this._Vsla.Entity;
			}
			set
			{
				Vsla previousValue = this._Vsla.Entity;
				if (((previousValue != value) 
							|| (this._Vsla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vsla.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._Vsla.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._VslaId = value.VslaId;
					}
					else
					{
						this._VslaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vsla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_LoanIssues(LoanIssue entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_LoanIssues(LoanIssue entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_LoanRepayments(LoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Saving")]
	public partial class Saving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SavingId;
		
		private System.Nullable<int> _SavingIdEx;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _MeetingId;
		
		private System.Nullable<int> _MemberId;
		
		private EntityRef<Meeting> _Meeting;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSavingIdChanging(int value);
    partial void OnSavingIdChanged();
    partial void OnSavingIdExChanging(System.Nullable<int> value);
    partial void OnSavingIdExChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnMeetingIdChanging(System.Nullable<int> value);
    partial void OnMeetingIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    #endregion
		
		public Saving()
		{
			this._Meeting = default(EntityRef<Meeting>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SavingId
		{
			get
			{
				return this._SavingId;
			}
			set
			{
				if ((this._SavingId != value))
				{
					this.OnSavingIdChanging(value);
					this.SendPropertyChanging();
					this._SavingId = value;
					this.SendPropertyChanged("SavingId");
					this.OnSavingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingIdEx", DbType="Int")]
		public System.Nullable<int> SavingIdEx
		{
			get
			{
				return this._SavingIdEx;
			}
			set
			{
				if ((this._SavingIdEx != value))
				{
					this.OnSavingIdExChanging(value);
					this.SendPropertyChanging();
					this._SavingIdEx = value;
					this.SendPropertyChanged("SavingIdEx");
					this.OnSavingIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingId", DbType="Int")]
		public System.Nullable<int> MeetingId
		{
			get
			{
				return this._MeetingId;
			}
			set
			{
				if ((this._MeetingId != value))
				{
					if (this._Meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeetingIdChanging(value);
					this.SendPropertyChanging();
					this._MeetingId = value;
					this.SendPropertyChanged("MeetingId");
					this.OnMeetingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meeting_Saving", Storage="_Meeting", ThisKey="MeetingId", OtherKey="MeetingId", IsForeignKey=true)]
		public Meeting Meeting
		{
			get
			{
				return this._Meeting.Entity;
			}
			set
			{
				Meeting previousValue = this._Meeting.Entity;
				if (((previousValue != value) 
							|| (this._Meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meeting.Entity = null;
						previousValue.Savings.Remove(this);
					}
					this._Meeting.Entity = value;
					if ((value != null))
					{
						value.Savings.Add(this);
						this._MeetingId = value.MeetingId;
					}
					else
					{
						this._MeetingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Saving", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Savings.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Savings.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusType")]
	public partial class StatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Status_Id;
		
		private string _CurrentStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatus_IdChanging(int value);
    partial void OnStatus_IdChanged();
    partial void OnCurrentStatusChanging(string value);
    partial void OnCurrentStatusChanged();
    #endregion
		
		public StatusType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Status_Id
		{
			get
			{
				return this._Status_Id;
			}
			set
			{
				if ((this._Status_Id != value))
				{
					this.OnStatus_IdChanging(value);
					this.SendPropertyChanging();
					this._Status_Id = value;
					this.SendPropertyChanged("Status_Id");
					this.OnStatus_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					this.OnCurrentStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatus = value;
					this.SendPropertyChanged("CurrentStatus");
					this.OnCurrentStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermissions")]
	public partial class UserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Level_Id;
		
		private string _UserType;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevel_IdChanging(int value);
    partial void OnLevel_IdChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public UserPermission()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Level_Id
		{
			get
			{
				return this._Level_Id;
			}
			set
			{
				if ((this._Level_Id != value))
				{
					this.OnLevel_IdChanging(value);
					this.SendPropertyChanging();
					this._Level_Id = value;
					this.SendPropertyChanged("Level_Id");
					this.OnLevel_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPermission_User", Storage="_Users", ThisKey="Level_Id", OtherKey="UserLevel")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserPermission = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserPermission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Fullname;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private int _UserLevel;
		
		private EntitySet<Audit_Log> _Audit_Logs;
		
		private EntityRef<UserPermission> _UserPermission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnUserLevelChanging(int value);
    partial void OnUserLevelChanged();
    #endregion
		
		public User()
		{
			this._Audit_Logs = new EntitySet<Audit_Log>(new Action<Audit_Log>(this.attach_Audit_Logs), new Action<Audit_Log>(this.detach_Audit_Logs));
			this._UserPermission = default(EntityRef<UserPermission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLevel", DbType="Int NOT NULL")]
		public int UserLevel
		{
			get
			{
				return this._UserLevel;
			}
			set
			{
				if ((this._UserLevel != value))
				{
					if (this._UserPermission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserLevelChanging(value);
					this.SendPropertyChanging();
					this._UserLevel = value;
					this.SendPropertyChanged("UserLevel");
					this.OnUserLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Audit_Log", Storage="_Audit_Logs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Audit_Log> Audit_Logs
		{
			get
			{
				return this._Audit_Logs;
			}
			set
			{
				this._Audit_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserPermission_User", Storage="_UserPermission", ThisKey="UserLevel", OtherKey="Level_Id", IsForeignKey=true)]
		public UserPermission UserPermission
		{
			get
			{
				return this._UserPermission.Entity;
			}
			set
			{
				UserPermission previousValue = this._UserPermission.Entity;
				if (((previousValue != value) 
							|| (this._UserPermission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPermission.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserPermission.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserLevel = value.Level_Id;
					}
					else
					{
						this._UserLevel = default(int);
					}
					this.SendPropertyChanged("UserPermission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Audit_Logs(Audit_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Audit_Logs(Audit_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vsla")]
	public partial class Vsla : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VslaId;
		
		private string _VslaCode;
		
		private string _VslaName;
		
		private string _VslaPhoneMsisdn;
		
		private string _PhysicalAddress;
		
		private string _GpsLocation;
		
		private System.Nullable<System.DateTime> _DateRegistered;
		
		private System.Nullable<System.DateTime> _DateLinked;
		
		private System.Nullable<int> _RegionId;
		
		private string _ContactPerson;
		
		private string _PositionInVsla;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _CBT;
		
		private int _Status;
		
		private EntitySet<Member> _Members;
		
		private EntitySet<VslaCycle> _VslaCycles;
		
		private EntitySet<VslaDdActivation> _VslaDdActivations;
		
		private EntityRef<Cbt_info> _Cbt_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVslaIdChanging(int value);
    partial void OnVslaIdChanged();
    partial void OnVslaCodeChanging(string value);
    partial void OnVslaCodeChanged();
    partial void OnVslaNameChanging(string value);
    partial void OnVslaNameChanged();
    partial void OnVslaPhoneMsisdnChanging(string value);
    partial void OnVslaPhoneMsisdnChanged();
    partial void OnPhysicalAddressChanging(string value);
    partial void OnPhysicalAddressChanged();
    partial void OnGpsLocationChanging(string value);
    partial void OnGpsLocationChanged();
    partial void OnDateRegisteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegisteredChanged();
    partial void OnDateLinkedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLinkedChanged();
    partial void OnRegionIdChanging(System.Nullable<int> value);
    partial void OnRegionIdChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnPositionInVslaChanging(string value);
    partial void OnPositionInVslaChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCBTChanging(System.Nullable<int> value);
    partial void OnCBTChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Vsla()
		{
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			this._VslaCycles = new EntitySet<VslaCycle>(new Action<VslaCycle>(this.attach_VslaCycles), new Action<VslaCycle>(this.detach_VslaCycles));
			this._VslaDdActivations = new EntitySet<VslaDdActivation>(new Action<VslaDdActivation>(this.attach_VslaDdActivations), new Action<VslaDdActivation>(this.detach_VslaDdActivations));
			this._Cbt_info = default(EntityRef<Cbt_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VslaId
		{
			get
			{
				return this._VslaId;
			}
			set
			{
				if ((this._VslaId != value))
				{
					this.OnVslaIdChanging(value);
					this.SendPropertyChanging();
					this._VslaId = value;
					this.SendPropertyChanged("VslaId");
					this.OnVslaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string VslaCode
		{
			get
			{
				return this._VslaCode;
			}
			set
			{
				if ((this._VslaCode != value))
				{
					this.OnVslaCodeChanging(value);
					this.SendPropertyChanging();
					this._VslaCode = value;
					this.SendPropertyChanged("VslaCode");
					this.OnVslaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string VslaName
		{
			get
			{
				return this._VslaName;
			}
			set
			{
				if ((this._VslaName != value))
				{
					this.OnVslaNameChanging(value);
					this.SendPropertyChanging();
					this._VslaName = value;
					this.SendPropertyChanged("VslaName");
					this.OnVslaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaPhoneMsisdn", DbType="NVarChar(20)")]
		public string VslaPhoneMsisdn
		{
			get
			{
				return this._VslaPhoneMsisdn;
			}
			set
			{
				if ((this._VslaPhoneMsisdn != value))
				{
					this.OnVslaPhoneMsisdnChanging(value);
					this.SendPropertyChanging();
					this._VslaPhoneMsisdn = value;
					this.SendPropertyChanged("VslaPhoneMsisdn");
					this.OnVslaPhoneMsisdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalAddress", DbType="NVarChar(255)")]
		public string PhysicalAddress
		{
			get
			{
				return this._PhysicalAddress;
			}
			set
			{
				if ((this._PhysicalAddress != value))
				{
					this.OnPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._PhysicalAddress = value;
					this.SendPropertyChanged("PhysicalAddress");
					this.OnPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsLocation", DbType="NVarChar(100)")]
		public string GpsLocation
		{
			get
			{
				return this._GpsLocation;
			}
			set
			{
				if ((this._GpsLocation != value))
				{
					this.OnGpsLocationChanging(value);
					this.SendPropertyChanging();
					this._GpsLocation = value;
					this.SendPropertyChanged("GpsLocation");
					this.OnGpsLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLinked", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLinked
		{
			get
			{
				return this._DateLinked;
			}
			set
			{
				if ((this._DateLinked != value))
				{
					this.OnDateLinkedChanging(value);
					this.SendPropertyChanging();
					this._DateLinked = value;
					this.SendPropertyChanged("DateLinked");
					this.OnDateLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int")]
		public System.Nullable<int> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="VarChar(250)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionInVsla", DbType="VarChar(100)")]
		public string PositionInVsla
		{
			get
			{
				return this._PositionInVsla;
			}
			set
			{
				if ((this._PositionInVsla != value))
				{
					this.OnPositionInVslaChanging(value);
					this.SendPropertyChanging();
					this._PositionInVsla = value;
					this.SendPropertyChanged("PositionInVsla");
					this.OnPositionInVslaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CBT", DbType="Int")]
		public System.Nullable<int> CBT
		{
			get
			{
				return this._CBT;
			}
			set
			{
				if ((this._CBT != value))
				{
					if (this._Cbt_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCBTChanging(value);
					this.SendPropertyChanging();
					this._CBT = value;
					this.SendPropertyChanged("CBT");
					this.OnCBTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_Member", Storage="_Members", ThisKey="VslaId", OtherKey="VslaId")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_VslaCycle", Storage="_VslaCycles", ThisKey="VslaId", OtherKey="VslaId")]
		public EntitySet<VslaCycle> VslaCycles
		{
			get
			{
				return this._VslaCycles;
			}
			set
			{
				this._VslaCycles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_VslaDdActivation", Storage="_VslaDdActivations", ThisKey="VslaId", OtherKey="VslaId")]
		public EntitySet<VslaDdActivation> VslaDdActivations
		{
			get
			{
				return this._VslaDdActivations;
			}
			set
			{
				this._VslaDdActivations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cbt_info_Vsla", Storage="_Cbt_info", ThisKey="CBT", OtherKey="Id", IsForeignKey=true)]
		public Cbt_info Cbt_info
		{
			get
			{
				return this._Cbt_info.Entity;
			}
			set
			{
				Cbt_info previousValue = this._Cbt_info.Entity;
				if (((previousValue != value) 
							|| (this._Cbt_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cbt_info.Entity = null;
						previousValue.Vslas.Remove(this);
					}
					this._Cbt_info.Entity = value;
					if ((value != null))
					{
						value.Vslas.Add(this);
						this._CBT = value.Id;
					}
					else
					{
						this._CBT = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cbt_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = null;
		}
		
		private void attach_VslaCycles(VslaCycle entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = this;
		}
		
		private void detach_VslaCycles(VslaCycle entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = null;
		}
		
		private void attach_VslaDdActivations(VslaDdActivation entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = this;
		}
		
		private void detach_VslaDdActivations(VslaDdActivation entity)
		{
			this.SendPropertyChanging();
			entity.Vsla = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VslaCycle")]
	public partial class VslaCycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CycleId;
		
		private System.Nullable<int> _CycleIdEx;
		
		private System.Nullable<System.DateTime> _DateEnded;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CycleCode;
		
		private System.Nullable<double> _InterestRate;
		
		private System.Nullable<bool> _IsEnded;
		
		private System.Nullable<int> _MaxShareQuantity;
		
		private System.Nullable<double> _MaxStartShare;
		
		private System.Nullable<double> _SharedAmount;
		
		private System.Nullable<double> _SharePrice;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _VslaId;
		
		private System.Nullable<decimal> _MigratedInterest;
		
		private System.Nullable<decimal> _MigratedFines;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntityRef<Vsla> _Vsla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCycleIdChanging(int value);
    partial void OnCycleIdChanged();
    partial void OnCycleIdExChanging(System.Nullable<int> value);
    partial void OnCycleIdExChanged();
    partial void OnDateEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndedChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCycleCodeChanging(string value);
    partial void OnCycleCodeChanged();
    partial void OnInterestRateChanging(System.Nullable<double> value);
    partial void OnInterestRateChanged();
    partial void OnIsEndedChanging(System.Nullable<bool> value);
    partial void OnIsEndedChanged();
    partial void OnMaxShareQuantityChanging(System.Nullable<int> value);
    partial void OnMaxShareQuantityChanged();
    partial void OnMaxStartShareChanging(System.Nullable<double> value);
    partial void OnMaxStartShareChanged();
    partial void OnSharedAmountChanging(System.Nullable<double> value);
    partial void OnSharedAmountChanged();
    partial void OnSharePriceChanging(System.Nullable<double> value);
    partial void OnSharePriceChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnVslaIdChanging(System.Nullable<int> value);
    partial void OnVslaIdChanged();
    partial void OnMigratedInterestChanging(System.Nullable<decimal> value);
    partial void OnMigratedInterestChanged();
    partial void OnMigratedFinesChanging(System.Nullable<decimal> value);
    partial void OnMigratedFinesChanged();
    #endregion
		
		public VslaCycle()
		{
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._Vsla = default(EntityRef<Vsla>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CycleId
		{
			get
			{
				return this._CycleId;
			}
			set
			{
				if ((this._CycleId != value))
				{
					this.OnCycleIdChanging(value);
					this.SendPropertyChanging();
					this._CycleId = value;
					this.SendPropertyChanged("CycleId");
					this.OnCycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleIdEx", DbType="Int")]
		public System.Nullable<int> CycleIdEx
		{
			get
			{
				return this._CycleIdEx;
			}
			set
			{
				if ((this._CycleIdEx != value))
				{
					this.OnCycleIdExChanging(value);
					this.SendPropertyChanging();
					this._CycleIdEx = value;
					this.SendPropertyChanged("CycleIdEx");
					this.OnCycleIdExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnded
		{
			get
			{
				return this._DateEnded;
			}
			set
			{
				if ((this._DateEnded != value))
				{
					this.OnDateEndedChanging(value);
					this.SendPropertyChanging();
					this._DateEnded = value;
					this.SendPropertyChanged("DateEnded");
					this.OnDateEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleCode", DbType="NVarChar(20)")]
		public string CycleCode
		{
			get
			{
				return this._CycleCode;
			}
			set
			{
				if ((this._CycleCode != value))
				{
					this.OnCycleCodeChanging(value);
					this.SendPropertyChanging();
					this._CycleCode = value;
					this.SendPropertyChanged("CycleCode");
					this.OnCycleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRate", DbType="Float")]
		public System.Nullable<double> InterestRate
		{
			get
			{
				return this._InterestRate;
			}
			set
			{
				if ((this._InterestRate != value))
				{
					this.OnInterestRateChanging(value);
					this.SendPropertyChanging();
					this._InterestRate = value;
					this.SendPropertyChanged("InterestRate");
					this.OnInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnded", DbType="Bit")]
		public System.Nullable<bool> IsEnded
		{
			get
			{
				return this._IsEnded;
			}
			set
			{
				if ((this._IsEnded != value))
				{
					this.OnIsEndedChanging(value);
					this.SendPropertyChanging();
					this._IsEnded = value;
					this.SendPropertyChanged("IsEnded");
					this.OnIsEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxShareQuantity", DbType="Int")]
		public System.Nullable<int> MaxShareQuantity
		{
			get
			{
				return this._MaxShareQuantity;
			}
			set
			{
				if ((this._MaxShareQuantity != value))
				{
					this.OnMaxShareQuantityChanging(value);
					this.SendPropertyChanging();
					this._MaxShareQuantity = value;
					this.SendPropertyChanged("MaxShareQuantity");
					this.OnMaxShareQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxStartShare", DbType="Float")]
		public System.Nullable<double> MaxStartShare
		{
			get
			{
				return this._MaxStartShare;
			}
			set
			{
				if ((this._MaxStartShare != value))
				{
					this.OnMaxStartShareChanging(value);
					this.SendPropertyChanging();
					this._MaxStartShare = value;
					this.SendPropertyChanged("MaxStartShare");
					this.OnMaxStartShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharedAmount", DbType="Float")]
		public System.Nullable<double> SharedAmount
		{
			get
			{
				return this._SharedAmount;
			}
			set
			{
				if ((this._SharedAmount != value))
				{
					this.OnSharedAmountChanging(value);
					this.SendPropertyChanging();
					this._SharedAmount = value;
					this.SendPropertyChanged("SharedAmount");
					this.OnSharedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharePrice", DbType="Float")]
		public System.Nullable<double> SharePrice
		{
			get
			{
				return this._SharePrice;
			}
			set
			{
				if ((this._SharePrice != value))
				{
					this.OnSharePriceChanging(value);
					this.SendPropertyChanging();
					this._SharePrice = value;
					this.SendPropertyChanged("SharePrice");
					this.OnSharePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaId", DbType="Int")]
		public System.Nullable<int> VslaId
		{
			get
			{
				return this._VslaId;
			}
			set
			{
				if ((this._VslaId != value))
				{
					if (this._Vsla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVslaIdChanging(value);
					this.SendPropertyChanging();
					this._VslaId = value;
					this.SendPropertyChanged("VslaId");
					this.OnVslaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigratedInterest", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MigratedInterest
		{
			get
			{
				return this._MigratedInterest;
			}
			set
			{
				if ((this._MigratedInterest != value))
				{
					this.OnMigratedInterestChanging(value);
					this.SendPropertyChanging();
					this._MigratedInterest = value;
					this.SendPropertyChanged("MigratedInterest");
					this.OnMigratedInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigratedFines", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MigratedFines
		{
			get
			{
				return this._MigratedFines;
			}
			set
			{
				if ((this._MigratedFines != value))
				{
					this.OnMigratedFinesChanging(value);
					this.SendPropertyChanging();
					this._MigratedFines = value;
					this.SendPropertyChanged("MigratedFines");
					this.OnMigratedFinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VslaCycle_Meeting", Storage="_Meetings", ThisKey="CycleId", OtherKey="CycleId")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_VslaCycle", Storage="_Vsla", ThisKey="VslaId", OtherKey="VslaId", IsForeignKey=true)]
		public Vsla Vsla
		{
			get
			{
				return this._Vsla.Entity;
			}
			set
			{
				Vsla previousValue = this._Vsla.Entity;
				if (((previousValue != value) 
							|| (this._Vsla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vsla.Entity = null;
						previousValue.VslaCycles.Remove(this);
					}
					this._Vsla.Entity = value;
					if ((value != null))
					{
						value.VslaCycles.Add(this);
						this._VslaId = value.VslaId;
					}
					else
					{
						this._VslaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vsla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.VslaCycle = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.VslaCycle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VslaDdActivation")]
	public partial class VslaDdActivation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivationId;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private System.Nullable<bool> _IsActive;
		
		private string _PassKey;
		
		private string _PhoneImei01;
		
		private string _PhoneImei02;
		
		private string _SimImsiNo01;
		
		private string _SimImsiNo02;
		
		private string _SimNetworkOperator01;
		
		private string _SimNetworkOperator02;
		
		private string _SimSerialNo01;
		
		private string _SimSerialNo02;
		
		private System.Nullable<int> _VslaId;
		
		private EntityRef<Vsla> _Vsla;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivationIdChanging(int value);
    partial void OnActivationIdChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnPassKeyChanging(string value);
    partial void OnPassKeyChanged();
    partial void OnPhoneImei01Changing(string value);
    partial void OnPhoneImei01Changed();
    partial void OnPhoneImei02Changing(string value);
    partial void OnPhoneImei02Changed();
    partial void OnSimImsiNo01Changing(string value);
    partial void OnSimImsiNo01Changed();
    partial void OnSimImsiNo02Changing(string value);
    partial void OnSimImsiNo02Changed();
    partial void OnSimNetworkOperator01Changing(string value);
    partial void OnSimNetworkOperator01Changed();
    partial void OnSimNetworkOperator02Changing(string value);
    partial void OnSimNetworkOperator02Changed();
    partial void OnSimSerialNo01Changing(string value);
    partial void OnSimSerialNo01Changed();
    partial void OnSimSerialNo02Changing(string value);
    partial void OnSimSerialNo02Changed();
    partial void OnVslaIdChanging(System.Nullable<int> value);
    partial void OnVslaIdChanged();
    #endregion
		
		public VslaDdActivation()
		{
			this._Vsla = default(EntityRef<Vsla>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivationId
		{
			get
			{
				return this._ActivationId;
			}
			set
			{
				if ((this._ActivationId != value))
				{
					this.OnActivationIdChanging(value);
					this.SendPropertyChanging();
					this._ActivationId = value;
					this.SendPropertyChanged("ActivationId");
					this.OnActivationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassKey", DbType="NVarChar(255)")]
		public string PassKey
		{
			get
			{
				return this._PassKey;
			}
			set
			{
				if ((this._PassKey != value))
				{
					this.OnPassKeyChanging(value);
					this.SendPropertyChanging();
					this._PassKey = value;
					this.SendPropertyChanged("PassKey");
					this.OnPassKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneImei01", DbType="NVarChar(255)")]
		public string PhoneImei01
		{
			get
			{
				return this._PhoneImei01;
			}
			set
			{
				if ((this._PhoneImei01 != value))
				{
					this.OnPhoneImei01Changing(value);
					this.SendPropertyChanging();
					this._PhoneImei01 = value;
					this.SendPropertyChanged("PhoneImei01");
					this.OnPhoneImei01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneImei02", DbType="NVarChar(255)")]
		public string PhoneImei02
		{
			get
			{
				return this._PhoneImei02;
			}
			set
			{
				if ((this._PhoneImei02 != value))
				{
					this.OnPhoneImei02Changing(value);
					this.SendPropertyChanging();
					this._PhoneImei02 = value;
					this.SendPropertyChanged("PhoneImei02");
					this.OnPhoneImei02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimImsiNo01", DbType="NVarChar(255)")]
		public string SimImsiNo01
		{
			get
			{
				return this._SimImsiNo01;
			}
			set
			{
				if ((this._SimImsiNo01 != value))
				{
					this.OnSimImsiNo01Changing(value);
					this.SendPropertyChanging();
					this._SimImsiNo01 = value;
					this.SendPropertyChanged("SimImsiNo01");
					this.OnSimImsiNo01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimImsiNo02", DbType="NVarChar(255)")]
		public string SimImsiNo02
		{
			get
			{
				return this._SimImsiNo02;
			}
			set
			{
				if ((this._SimImsiNo02 != value))
				{
					this.OnSimImsiNo02Changing(value);
					this.SendPropertyChanging();
					this._SimImsiNo02 = value;
					this.SendPropertyChanged("SimImsiNo02");
					this.OnSimImsiNo02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimNetworkOperator01", DbType="NVarChar(255)")]
		public string SimNetworkOperator01
		{
			get
			{
				return this._SimNetworkOperator01;
			}
			set
			{
				if ((this._SimNetworkOperator01 != value))
				{
					this.OnSimNetworkOperator01Changing(value);
					this.SendPropertyChanging();
					this._SimNetworkOperator01 = value;
					this.SendPropertyChanged("SimNetworkOperator01");
					this.OnSimNetworkOperator01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimNetworkOperator02", DbType="NVarChar(255)")]
		public string SimNetworkOperator02
		{
			get
			{
				return this._SimNetworkOperator02;
			}
			set
			{
				if ((this._SimNetworkOperator02 != value))
				{
					this.OnSimNetworkOperator02Changing(value);
					this.SendPropertyChanging();
					this._SimNetworkOperator02 = value;
					this.SendPropertyChanged("SimNetworkOperator02");
					this.OnSimNetworkOperator02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimSerialNo01", DbType="NVarChar(255)")]
		public string SimSerialNo01
		{
			get
			{
				return this._SimSerialNo01;
			}
			set
			{
				if ((this._SimSerialNo01 != value))
				{
					this.OnSimSerialNo01Changing(value);
					this.SendPropertyChanging();
					this._SimSerialNo01 = value;
					this.SendPropertyChanged("SimSerialNo01");
					this.OnSimSerialNo01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimSerialNo02", DbType="NVarChar(255)")]
		public string SimSerialNo02
		{
			get
			{
				return this._SimSerialNo02;
			}
			set
			{
				if ((this._SimSerialNo02 != value))
				{
					this.OnSimSerialNo02Changing(value);
					this.SendPropertyChanging();
					this._SimSerialNo02 = value;
					this.SendPropertyChanged("SimSerialNo02");
					this.OnSimSerialNo02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VslaId", DbType="Int")]
		public System.Nullable<int> VslaId
		{
			get
			{
				return this._VslaId;
			}
			set
			{
				if ((this._VslaId != value))
				{
					if (this._Vsla.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVslaIdChanging(value);
					this.SendPropertyChanging();
					this._VslaId = value;
					this.SendPropertyChanged("VslaId");
					this.OnVslaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vsla_VslaDdActivation", Storage="_Vsla", ThisKey="VslaId", OtherKey="VslaId", IsForeignKey=true)]
		public Vsla Vsla
		{
			get
			{
				return this._Vsla.Entity;
			}
			set
			{
				Vsla previousValue = this._Vsla.Entity;
				if (((previousValue != value) 
							|| (this._Vsla.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vsla.Entity = null;
						previousValue.VslaDdActivations.Remove(this);
					}
					this._Vsla.Entity = value;
					if ((value != null))
					{
						value.VslaDdActivations.Add(this);
						this._VslaId = value.VslaId;
					}
					else
					{
						this._VslaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vsla");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VslaRegion")]
	public partial class VslaRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionId;
		
		private string _RegionCode;
		
		private string _RegionName;
		
		private EntitySet<Cbt_info> _Cbt_infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    #endregion
		
		public VslaRegion()
		{
			this._Cbt_infos = new EntitySet<Cbt_info>(new Action<Cbt_info>(this.attach_Cbt_infos), new Action<Cbt_info>(this.detach_Cbt_infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VslaRegion_Cbt_info", Storage="_Cbt_infos", ThisKey="RegionId", OtherKey="Region")]
		public EntitySet<Cbt_info> Cbt_infos
		{
			get
			{
				return this._Cbt_infos;
			}
			set
			{
				this._Cbt_infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cbt_infos(Cbt_info entity)
		{
			this.SendPropertyChanging();
			entity.VslaRegion = this;
		}
		
		private void detach_Cbt_infos(Cbt_info entity)
		{
			this.SendPropertyChanging();
			entity.VslaRegion = null;
		}
	}
}
#pragma warning restore 1591
